package com.photo.gallery.fragments.options;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.content.ContextCompat;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import com.photo.gallery.R;
import com.photo.gallery.adapters.options.PIPAdapter;
import com.photo.gallery.adapters.options.SplashAdapter;
import com.photo.gallery.models.options.PipEntity;
import com.photo.gallery.utils.ConstValue;
import com.photo.gallery.utils.Flog;
import com.photo.gallery.utils.SharedPrefUtil;

import java.util.ArrayList;

/**
 * Created by Tung on 4/2/2018.
 */

public class PipFragment extends BaseOptFragment implements PIPAdapter.OnItemPIPListener {

    private static final java.lang.String TAG = PipFragment.class.getSimpleName();
    private RecyclerView mRecyclerView;
    private SplashAdapter mAdapter = null;

    @Override
    public void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        return inflater.inflate(R.layout.layout_recyclerview, container, false);
    }

    @Override
    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);

        applyColor(view);
        initViews();
        setupRecyclerview();

        if (listener!=null) {
            listener.onPipFragmentReady();
        }
    }

    public void applyColor(View view) {
        int defaultPrimary = ContextCompat.getColor(mContext, R.color.colorPrimary);
        int colorPrimary = SharedPrefUtil.getInstance().getInt(ConstValue.EXTRA_CURRENT_COLOR_PICKER, defaultPrimary);

        ViewGroup viewGroup = view.findViewById(R.id.recycler_view);
        com.photo.gallery.utils.Utils.setColorViews(colorPrimary, viewGroup);
    }

    private ArrayList<Integer> iconID = new ArrayList<>();

    public void initData(ArrayList<PipEntity> dataset) {

        ArrayList<Integer> iconID = new ArrayList<>();
        for (int i = 1; i < dataset.size(); i++) {
            iconID.add(dataset.get(i).iconId);
        }
        PIPAdapter pipAdapter = new PIPAdapter(getActivity(), iconID).setOnItemPIPListener(this);
        mRecyclerView.setAdapter(pipAdapter);
    }

    private void initViews() {

        View viewParent = getView();
        if (viewParent == null) {
            return;
        }
        viewParent.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                // do nothing.
            }
        });

        mRecyclerView = viewParent.findViewById(R.id.recycler_view);
    }

    private void setupRecyclerview() {
        LinearLayoutManager lm = new LinearLayoutManager(mContext, LinearLayoutManager.HORIZONTAL, false);
        mRecyclerView.setLayoutManager(lm);
    }

    private OnPipListener listener = null;

    public PipFragment setListener(OnPipListener listener) {
        this.listener = listener;
        return this;
    }

    @Override
    public void onItemPIPClick(int pos) {
        Flog.d(TAG, "onItemPIPClick="+pos);
        if (listener!=null) {
            listener.onItemPIPClick(pos);
        }
    }

    public interface OnPipListener {
        public void onPipFragmentReady();
        public void onItemPIPClick(int position);
    }
}
